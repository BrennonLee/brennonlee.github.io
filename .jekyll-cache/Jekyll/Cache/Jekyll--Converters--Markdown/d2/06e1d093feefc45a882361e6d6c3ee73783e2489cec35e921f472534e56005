I"Q<p>This post goes over how to build a basic Alexa Skill. The tutorial takes you through the process of creating a lambda function, deploying an Alexa skill, and being able to ask Alexa to pick a Star Wars film for you.</p>

<h4 id="prerequisites">Prerequisites</h4>
<ul>
  <li>Have an AWS account (we will only be using services under the free tier so don’t worry about this costing you any 💰).</li>
  <li>Have created an account at <a href="https://www.developer.amazon.com">developer.amazon.com</a> (under the same account your Alexa device is associated with).</li>
  <li><strong>Note</strong> - An Alexa device is not required for this tutorial but it is fun to test your deployed skill and see it in action!</li>
</ul>

<h2 id="create-a-lambda-function">Create A Lambda Function</h2>
<p>To get started, we need to create a new lambda function that will act as the endpoint for our Alexa skill to hit when invoked.</p>
<ol>
  <li>Head over to the lambda service on the AWS Console and hit “Create Function”.</li>
  <li>To make it easy, there are publicly available libraries to help us get spun up within minutes. Select the “Browse serverless app repository” option and click “alexa-skills-kit-nodejs-factskill”:
<img src="/images/2020-08-08/create-lambda.png" alt="_config.yml" /></li>
  <li>We are going to keep all the defaults for this project so scroll to the bottom and deploy the lambda function!
<img src="/images/2020-08-08/deploy-lambda.png" alt="_config.yml" /></li>
  <li>After a few moments your lambda function should be successfully deployed! You will see it on your lambda dashboard. Go ahead and click on your new function to view the details. Scroll down to the function code and find the object <code class="language-plaintext highlighter-rouge">enData</code>. You should change the array of <code class="language-plaintext highlighter-rouge">FACTS</code> to look something like this:
<img src="/images/2020-08-08/star-wars-code.png" alt="_config.yml" />
Make sure to hit “Save” after making your changes!</li>
  <li>Lastly, take note of the <code class="language-plaintext highlighter-rouge">ARN</code> endpoint at the top right of your screen. This is important when we build our Alexa skill in the next section.</li>
</ol>

<h2 id="deploy-your-alexa-skill">Deploy your Alexa Skill</h2>
<ol>
  <li>In a new tab, navigate to your account on <a href="https://www.developer.amazon.com">developer.amazon.com</a>. From there,
hit <code class="language-plaintext highlighter-rouge">Developer Console</code> -&gt; <code class="language-plaintext highlighter-rouge">Alexa Skills Kit</code>. And let’s create a new skill:
<img src="/images/2020-08-08/create-skill.png" alt="_config.yml" /></li>
  <li>Next, give your skill any suitable name (this will not effect the invocation cue). I went with “StarWarsMoviePicker” for mine. We’re also going to go with the “Custom” model for our skill.
<img src="/images/2020-08-08/skill-details.png" alt="_config.yml" /></li>
  <li>For our template, we already are using the public repository for the Fact Skill in our lambda function so we’re going to use that as our skill template.
<img src="/images/2020-08-08/template.png" alt="_config.yml" />
Go ahead and continue from this step and create your skill! After a few minutes you will land on your new skill’s dashboard.</li>
  <li>We need to set the invocation name for the new skill! (This is what begins the interaction with Alexa on a particular skill). Navigate to the section titled “Invocation” and enter in “star wars cloud” as your skill invocation name and press “Save Model”.</li>
  <li>Before building the model, we need to set the endpoint to our lambda function so it references our Star Wars data when invoked! Under “Endpoint”, next to “Default Region”, paste in your ARN you copied from the last step of the lambda setup above.</li>
</ol>
:ET